(function(){"use strict";/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const M=Symbol("Comlink.proxy"),I=Symbol("Comlink.endpoint"),z=Symbol("Comlink.releaseProxy"),k=Symbol("Comlink.finalizer"),E=Symbol("Comlink.thrown"),A=e=>typeof e=="object"&&e!==null||typeof e=="function",N={canHandle:e=>A(e)&&e[M],serialize(e){const{port1:t,port2:n}=new MessageChannel;return P(e,t),[n,[n]]},deserialize(e){return e.start(),_(e)}},H={canHandle:e=>A(e)&&E in e,serialize({value:e}){let t;return e instanceof Error?t={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:t={isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},R=new Map([["proxy",N],["throw",H]]);function V(e,t){for(const n of e)if(t===n||n==="*"||n instanceof RegExp&&n.test(t))return!0;return!1}function P(e,t=globalThis,n=["*"]){t.addEventListener("message",function l(r){if(!r||!r.data)return;if(!V(n,r.origin)){console.warn(`Invalid origin '${r.origin}' for comlink proxy`);return}const{id:g,type:s,path:i}=Object.assign({path:[]},r.data),u=(r.data.argumentList||[]).map(m);let a;try{const o=i.slice(0,-1).reduce((c,d)=>c[d],e),f=i.reduce((c,d)=>c[d],e);switch(s){case"GET":a=f;break;case"SET":o[i.slice(-1)[0]]=m(r.data.value),a=!0;break;case"APPLY":a=f.apply(o,u);break;case"CONSTRUCT":{const c=new f(...u);a=G(c)}break;case"ENDPOINT":{const{port1:c,port2:d}=new MessageChannel;P(e,d),a=U(c,[c])}break;case"RELEASE":a=void 0;break;default:return}}catch(o){a={value:o,[E]:0}}Promise.resolve(a).catch(o=>({value:o,[E]:0})).then(o=>{const[f,c]=b(o);t.postMessage(Object.assign(Object.assign({},f),{id:g}),c),s==="RELEASE"&&(t.removeEventListener("message",l),T(t),k in e&&typeof e[k]=="function"&&e[k]())}).catch(o=>{const[f,c]=b({value:new TypeError("Unserializable return value"),[E]:0});t.postMessage(Object.assign(Object.assign({},f),{id:g}),c)})}),t.start&&t.start()}function W(e){return e.constructor.name==="MessagePort"}function T(e){W(e)&&e.close()}function _(e,t){return x(e,[],t)}function h(e){if(e)throw new Error("Proxy has been released and is not useable")}function C(e){return y(e,{type:"RELEASE"}).then(()=>{T(e)})}const w=new WeakMap,p="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{const t=(w.get(e)||0)-1;w.set(e,t),t===0&&C(e)});function j(e,t){const n=(w.get(t)||0)+1;w.set(t,n),p&&p.register(e,t,e)}function D(e){p&&p.unregister(e)}function x(e,t=[],n=function(){}){let l=!1;const r=new Proxy(n,{get(g,s){if(h(l),s===z)return()=>{D(r),C(e),l=!0};if(s==="then"){if(t.length===0)return{then:()=>r};const i=y(e,{type:"GET",path:t.map(u=>u.toString())}).then(m);return i.then.bind(i)}return x(e,[...t,s])},set(g,s,i){h(l);const[u,a]=b(i);return y(e,{type:"SET",path:[...t,s].map(o=>o.toString()),value:u},a).then(m)},apply(g,s,i){h(l);const u=t[t.length-1];if(u===I)return y(e,{type:"ENDPOINT"}).then(m);if(u==="bind")return x(e,t.slice(0,-1));const[a,o]=L(i);return y(e,{type:"APPLY",path:t.map(f=>f.toString()),argumentList:a},o).then(m)},construct(g,s){h(l);const[i,u]=L(s);return y(e,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:i},u).then(m)}});return j(r,e),r}function F(e){return Array.prototype.concat.apply([],e)}function L(e){const t=e.map(b);return[t.map(n=>n[0]),F(t.map(n=>n[1]))]}const O=new WeakMap;function U(e,t){return O.set(e,t),e}function G(e){return Object.assign(e,{[M]:!0})}function b(e){for(const[t,n]of R)if(n.canHandle(e)){const[l,r]=n.serialize(e);return[{type:"HANDLER",name:t,value:l},r]}return[{type:"RAW",value:e},O.get(e)||[]]}function m(e){switch(e.type){case"HANDLER":return R.get(e.name).deserialize(e.value);case"RAW":return e.value}}function y(e,t,n){return new Promise(l=>{const r=Y();e.addEventListener("message",function g(s){!s.data||!s.data.id||s.data.id!==r||(e.removeEventListener("message",g),l(s.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:r},t),n)})}function Y(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}const q=self,S=new Map,X={getItem:async e=>(console.log("getItem"),S.get(e)),setItem:async(e,t)=>{console.log("setItem"),S.set(e,t)},removeItem:async e=>{console.log("removeItem"),S.delete(e)}};q.onconnect=e=>{console.log("worker onconnect");const t=e.ports[0];P(X,t)}})();
